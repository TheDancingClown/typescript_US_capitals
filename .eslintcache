[{"/Users/louis/Programming/uscapitals/src/App.tsx":"1","/Users/louis/Programming/uscapitals/src/reportWebVitals.ts":"2","/Users/louis/Programming/uscapitals/src/index.tsx":"3","/Users/louis/Programming/uscapitals/src/components/Map/MapChart.tsx":"4","/Users/louis/Programming/uscapitals/src/components/Information/dataGetter.ts":"5"},{"size":251,"mtime":1612561877147,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1612364241352,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1612364241350,"results":"9","hashOfConfig":"7"},{"size":2455,"mtime":1612625402605,"results":"10","hashOfConfig":"7"},{"size":946,"mtime":1612626845487,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"1671bok",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/louis/Programming/uscapitals/src/App.tsx",["25"],"import React from 'react';\nimport MapChart from './components/Map/MapChart'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>US States</h1>\n        <MapChart/>\n        //Data\n    </div>\n  );\n}\n\nexport default App;\n",["26","27"],"/Users/louis/Programming/uscapitals/src/reportWebVitals.ts",[],"/Users/louis/Programming/uscapitals/src/index.tsx",[],"/Users/louis/Programming/uscapitals/src/components/Map/MapChart.tsx",["28"],"import React from \"react\";\nimport { geoCentroid } from \"d3-geo\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Annotation\n} from \"react-simple-maps\";\n\nimport allStates from \"../../data/allstates.json\";\nimport { USStates } from \"../Information/dataGetter\"\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\nconst offsets: any = {\n  VT: [50, -8],\n  NH: [34, 2],\n  MA: [30, -1],\n  RI: [28, 2],\n  CT: [35, 10],\n  NJ: [34, 1],\n  DE: [33, 0],\n  MD: [47, 10],\n  DC: [49, 21]\n};\n\nconst MapChart = () => {\n\n  const handleClick = async (id:string) => {\n    let data = await USStates.getData(id)\n    //show data\n  };\n\n  return (\n    <ComposableMap projection=\"geoAlbersUsa\">\n      <Geographies geography={geoUrl}>\n        {({ geographies }) => (\n          <>\n            {geographies.map(geo => (\n              <Geography\n                key={geo.rsmKey}\n                stroke=\"#FFF\"\n                geography={geo}\n                fill=\"#DDD\"\n              />\n            ))}\n            {geographies.map(geo => {\n              const centroid = geoCentroid(geo);\n              const cur = allStates.find(s => s.val === geo.id);\n              return (\n                <g key={geo.rsmKey + \"-name\"}>\n                  {cur &&\n                    centroid[0] > -160 &&\n                    centroid[0] < -67 &&\n                    (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n                      <Marker coordinates={centroid}>\n                        <text y=\"2\" fontSize={14} textAnchor=\"middle\">\n                          <a href=\"_blank\" onClick={() => handleClick(cur.objectID)}>\n                            {cur.id}\n                          </a>\n                        </text>\n                      </Marker>\n                    ) : (\n                      <Annotation\n                        subject={centroid}\n                        dx={offsets[cur.id][0]}\n                        dy={offsets[cur.id][1]}\n                      >\n                        <text x={4} fontSize={14} alignmentBaseline=\"middle\">\n                        <a href=\"_blank\" onClick={() => handleClick(cur.objectID)}>\n                            {cur.id}\n                          </a>\n                        </text>\n                      </Annotation>\n                    ))}\n                </g>\n              );\n            })}\n          </>\n        )}\n      </Geographies>\n    </ComposableMap>\n  );\n};\n\nexport default MapChart;\n","/Users/louis/Programming/uscapitals/src/components/Information/dataGetter.ts",[],{"ruleId":"29","severity":1,"message":"30","line":10,"column":20,"nodeType":"31","endLine":12,"endColumn":5},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":31,"column":9,"nodeType":"38","messageId":"39","endLine":31,"endColumn":13},"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","no-native-reassign",["40"],"no-negated-in-lhs",["41"],"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]